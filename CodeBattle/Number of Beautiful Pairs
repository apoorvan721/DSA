class Solution {
	public int countBeautifulPairs(int[] nums) {
		int count = 0;
        for (int i = 0; i < nums.length; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                int firstDigit = Integer.parseInt(Integer.toString(nums[i]).substring(0, 1));
                int lastDigit = nums[j] % 10;
                if (isCoprime(firstDigit, lastDigit)) {
                    count++;
                }
            }
        }
        return count;
    }
    
    public static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
    
        public static boolean isCoprime(int x, int y) {
        return gcd(x, y) == 1;
    }
}
