class Solution {
    ArrayList<Long> nthRowOfPascalTriangle(int n) {
        ArrayList<Long> answer=new ArrayList<>();
        long ans=1;
        long mod=(long)Math.pow(10,9)+7;
        for(long i=1;i<=n;i++){
            answer.add(ans);
            ans=(ans*(n-i))%mod;
            ans=(ans/i)%mod;
            
        }
        return answer;
    }
}
_______________________________________________________________
To find the entire Pascal elements using binomial co-efficient

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> ans=new ArrayList<>();
        if(numRows==0){
            return ans;
        }
        for(int row=0;row<numRows;row++){
            List<Integer> pascal=new ArrayList<>();
            for(int col=0;col<=row;col++){
                if((col==0)||(col==row)){
                    pascal.add(1);
                }
                else{
                    int left = ans.get(row - 1).get(col - 1);
                    int right = ans.get(row - 1).get(col);
                    pascal.add(left + right);
            }
        }
        ans.add(pascal);    
    }
    return ans;
    }
}
